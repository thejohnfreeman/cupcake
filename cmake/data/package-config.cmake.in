@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# Package Configuration Files define all variables in the calling scope.
# We don't want to interfere with the caller's variables by default.
# CMake 3.25 introduces `block()`, but for now we want to support CMake 3.22,
# the version included in Ubuntu 22.04.
# The function needs a unique name, but we cannot use @PROJECT_NAME@
# because it may not be a legal CMake identifier.
function(find_@random@)
  set(dependencies "@PROJECT_DEPENDENCIES@")
  foreach(args ${dependencies})
    find_dependency(${args})
  endforeach()
  include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")
endfunction()

find_@random@()

set(@PROJECT_NAME@_LIBRARY_NAMES "@PROJECT_LIBRARY_NAMES@")
foreach(name IN LISTS @PROJECT_NAME@_LIBRARY_NAMES)
  set(target @PROJECT_NAME@::libraries::${name})
  # This variable must be exported for `cupcake_install_cpp_info`.
  list(APPEND @PROJECT_NAME@_LIBRARIES ${target})
  add_library(@PROJECT_NAME@::l::${name} ALIAS ${target})
  if(name STREQUAL @PROJECT_NAME@)
    add_library(@PROJECT_NAME@::library ALIAS ${target})
  endif()
endforeach()
add_library(@PROJECT_NAME@::libraries INTERFACE IMPORTED)
target_link_libraries(
  @PROJECT_NAME@::libraries INTERFACE ${@PROJECT_NAME@_LIBRARIES}
)
